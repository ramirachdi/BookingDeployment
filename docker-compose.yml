services:
  booking-backend:
    build:
      context: ./BookingBackend
      dockerfile: Dockerfile
    env_file:
      - ./BookingBackend/.env
    ports:
      - "3000:3000" # Adjust if your backend runs on a different port
    environment:
      - DATABASE_URL=mysql://admin:root@db:3307/booking
    depends_on:
      db:
        condition: service_healthy
    networks:
      - monitoring  

  booking-frontend:
    build:
      context: ./BookingFrontend
      dockerfile: Dockerfile
    ports:
      - "3001:3001" # Standard ReactJS port
    depends_on:
      - booking-backend # Assuming the frontend needs to communicate with the backend
    networks:
      - monitoring

  db:
    image: mysql:8.0
    ports:
      - "3307:3307"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=booking
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=root
      - MYSQL_ROOT_HOST=db
      - MYSQL_TCP_PORT=3307
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - monitoring
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost --silent"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

volumes:
  mysql_data:

networks:
  monitoring:
    driver: bridge
